package com.freud.zkadmin.business.auth.controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;

import org.springframework.web.bind.annotation.RequestParam;

public class ZookeeperClient {

	public static void main(@RequestParam("AA") String[] args) throws Exception {
		Class.forName("org.apache.derby.jdbc.ClientDriver");
		Connection conn = DriverManager.getConnection("jdbc:derby:zk_admin;create=true");

		try {
			conn.prepareStatement("DROP TABLE ZK_INSTANCE").execute();
			conn.prepareStatement(
					"CREATE TABLE ZK_INSTANCE("
							+ "	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT BY 1),"
							+ "	NAME VARCHAR(128) NOT NULL," + "	IP VARCHAR(15) NOT NULL," + "	USE INT,"
							+ "	OPERATE_DATE TIMESTAMP," + "	CONSTRAINT PK_T_ZK_INSTANCE PRIMARY KEY (ID)" + ")")
					.execute();
		} catch (Exception e) {
			// e.printStackTrace();
			System.out.println(1 + "--");
		}

		try {
			conn.prepareStatement(
					"INSERT INTO ZK_INSTANCE(NAME,IP,USE,OPERATE_DATE) VALUES('10.1.5.123','10.1.5.123',1,CURRENT_TIMESTAMP)")
					.execute();
		} catch (Exception e) {
			// e.printStackTrace();
			System.out.println(2 + "--");
		}

		try {
			ResultSet rs = conn.prepareStatement("select * from ZK_INSTANCE").executeQuery();
			rs.next();
			System.out.println(rs.getInt(1));
			System.out.println(rs.getString(2));
			System.out.println(rs.getString(3));
			System.out.println(rs.getInt(4));
			System.out.println(rs.getTimestamp(5));
		} catch (Exception e) {
			// e.printStackTrace();
			System.out.println(3 + "--");
		}
		conn.commit();
		conn.close();
	}

}
